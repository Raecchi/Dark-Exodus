[gd_scene load_steps=22 format=3 uid="uid://c3c21rri0uj27"]

[ext_resource type="Script" path="res://scripts/player.gd" id="1_3pavd"]
[ext_resource type="Texture2D" uid="uid://dkbmcvsrvlub" path="res://sprites/character_update.png" id="1_8mgnk"]

[sub_resource type="Animation" id="Animation_0lahl"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_0y3fr"]
resource_name = "h_swing"
length = 0.250005
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.05, 0.1, 0.15),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [8, 9, 10, 11]
}

[sub_resource type="Animation" id="Animation_is2sd"]
resource_name = "idle"
length = 1.80001
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 1, 1.2, 1.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 2, 1, 0]
}

[sub_resource type="Animation" id="Animation_pac0d"]
resource_name = "v_swing"
length = 0.250005
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.05, 0.1, 0.15),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [4, 5, 6, 7]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_g2sqo"]
_data = {
"RESET": SubResource("Animation_0lahl"),
"h_swing": SubResource("Animation_0y3fr"),
"idle": SubResource("Animation_is2sd"),
"v_swing": SubResource("Animation_pac0d")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_r66e6"]
size = Vector2(58, 77)

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_e6ath"]
animation = &"h_swing"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vc3y3"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_a4ujw"]
animation = &"v_swing"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_lo4pg"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_605lr"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_bnybs"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_qbu8e"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_ld4g2"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_lda16"]
advance_condition = &"h_swing"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_r7tys"]
advance_condition = &"v_swing"

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_2leva"]
states/Start/position = Vector2(201, 100)
states/h_swing/node = SubResource("AnimationNodeAnimation_e6ath")
states/h_swing/position = Vector2(544, 191)
states/idle/node = SubResource("AnimationNodeAnimation_vc3y3")
states/idle/position = Vector2(453, 100)
states/v_swing/node = SubResource("AnimationNodeAnimation_a4ujw")
states/v_swing/position = Vector2(355, 191)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_lo4pg"), "idle", "v_swing", SubResource("AnimationNodeStateMachineTransition_605lr"), "idle", "h_swing", SubResource("AnimationNodeStateMachineTransition_bnybs"), "v_swing", "idle", SubResource("AnimationNodeStateMachineTransition_qbu8e"), "h_swing", "idle", SubResource("AnimationNodeStateMachineTransition_ld4g2"), "h_swing", "v_swing", SubResource("AnimationNodeStateMachineTransition_lda16"), "v_swing", "h_swing", SubResource("AnimationNodeStateMachineTransition_r7tys")]
graph_offset = Vector2(-36, 21)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dj8v8"]
size = Vector2(1088, 536)

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_xnl2t"]

[node name="player" type="CharacterBody2D"]
collision_layer = 0
collision_mask = 0
script = ExtResource("1_3pavd")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_8mgnk")
hframes = 4
vframes = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_g2sqo")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 24.5)
shape = SubResource("RectangleShape2D_r66e6")

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_2leva")
anim_player = NodePath("../AnimationPlayer")
parameters/conditions/h_swing = false
parameters/conditions/v_swing = false

[node name="detector" type="Node" parent="."]

[node name="enemy_detector" type="Area2D" parent="detector"]
position = Vector2(513, 374)

[node name="CollisionShape2D" type="CollisionShape2D" parent="detector/enemy_detector"]
visible = false
position = Vector2(159, 22)
shape = SubResource("RectangleShape2D_dj8v8")

[node name="gust_spawner" type="Marker2D" parent="."]
position = Vector2(-8, 56)

[node name="global" type="Node" parent="."]

[node name="neutral_position" type="Marker2D" parent="global"]
position = Vector2(384, 384)

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_xnl2t")

[connection signal="body_entered" from="detector/enemy_detector" to="." method="_on_enemy_detector_body_entered"]
[connection signal="body_exited" from="detector/enemy_detector" to="." method="_on_enemy_detector_body_exited"]
